#! /usr/bin/env python

import shutil

def configure(conf):
    conf.check_cfg(package='gobject-introspection-1.0', uselib_store='GI',
                   msg = 'Checking for gobject-introspection tools',
                   okmsg = 'ok',
                   variables=['gidatadir', 'g_ir_scanner', 'g_ir_compiler'])
    conf.check_cfg(package='gio-2.0', uselib_store='GIO',
                   args='--cflags --libs')
    conf.check_cfg(package='cairo', uselib_store='CAIRO',
                   args='--cflags --libs')

def build(bld):
    # Copy GObjectIntrospection regress suite source files into our own build
    # directory.
    gi_tests = bld.root.find_dir(bld.env.GI_gidatadir + '/tests')
    testsrc = ['regress.c', 'regress.h']
    for test in testsrc:
        bld(rule = 'cp ${SRC} ${TGT}',
            target = bld.path.find_or_declare(test).get_bld(),
            source = gi_tests.find_resource(test))

    # Build its shared library.
    bld(features = 'c cshlib',
        uselib = ['LUA', 'GI', 'GIO', 'CAIRO'],
        source = 'regress.c',
        target = 'regress',
        cflags = bld.env.CCFLAGS,
        install_path = None,
        )

    # Easier than trying to hook dependency of .gir on shlib built above.
    bld.add_group()

    # Build .gir file from the sources and shared library.
    bld(rule = 'cd tests && ${GI_g_ir_scanner} --warn-all --quiet --no-libtool '
        '--namespace=Regress --nsversion=1.0 '
        '--include=cairo-1.0 --include=Gio-2.0 -lregress regress.c regress.h '
        '--output=Regress-1.0.gir',
        source = testsrc,
        target = 'Regress-1.0.gir')

    # Compile .gir into .typelib
    bld(rule = '${GI_g_ir_compiler} --output=${TGT} ${SRC}',
        source='Regress-1.0.gir',
        target = 'Regress-1.0.typelib')
